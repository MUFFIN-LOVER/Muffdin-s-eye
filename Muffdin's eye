import telebot
from telebot import types
from datetime import datetime
import html

# –¢–æ–∫–µ–Ω –∏ ID —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
bot = telebot.TeleBot("8212352418:AAHg-8-okjOGZ3E-LpCdPuSsLqaa-S6h7T4", parse_mode='HTML')
me = 8295751364  # –¢–≤–æ–π Telegram user ID

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.InlineKeyboardMarkup()
    btn0 = types.InlineKeyboardButton(
        text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞", url="https://t.me/ArgusM_bot?startgroup=true"
    )
    markup.add(btn0)

    bot.send_message(
        message.chat.id,
        "<b>–ü—Ä–∏–≤–µ—Ç!\n–Ø –º–æ–ª–æ–¥–æ–π –±–æ—Ç –∏ –Ω–∞—Ö–æ–∂—É—Å—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ! ‚ö†\n"
        "–¢—ã —É–∂–µ –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä—É 'Ludik' –æ—Ç –º–µ–Ω—èüëá</b>",
        reply_markup=markup
    )

# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤–∞–∂–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
def extract_relevant_entities(message):
    if not message.entities or not message.text:
        return []

    relevant_types = {'url', 'email', 'phone_number'}
    extracted = []

    for entity in message.entities:
        if entity.type in relevant_types:
            start = entity.offset
            end = start + entity.length
            entity_text = message.text[start:end]
            extracted.append(f"{entity.type}: {html.escape(entity_text)}")

    return extracted

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda m: True)
def handle_all_messages(message):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç–µ–π
    relevant_entities = extract_relevant_entities(message)
    time_str = datetime.fromtimestamp(message.date).strftime("%d.%m.%Y %H:%M:%S")

    # –°–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    lines = []
    lines.append("<b>–õ–ò–ß–ù–û–°–¢–¨</b>")
    if message.from_user.first_name:
        lines.append(f"–ò–º—è: {html.escape(message.from_user.first_name)}")
    if message.from_user.last_name:
        lines.append(f"–§–∞–º–∏–ª–∏—è: {html.escape(message.from_user.last_name)}")
    if message.from_user.username:
        lines.append(f"–Æ–∑–µ—Ä–Ω–µ–π–º: @{html.escape(message.from_user.username)}")
    lines.append(f"ID: {message.from_user.id}")
    lines.append(f"–ë–æ—Ç: {message.from_user.is_bot}")
    if message.from_user.language_code:
        lines.append(f"–Ø–∑—ã–∫: {html.escape(message.from_user.language_code)}")
    lines.append(f"–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {time_str}\n")

    lines.append("<b>–ß–ê–¢</b>")
    lines.append(f"ID –ß–∞—Ç–∞: {message.chat.id}")
    lines.append(f"–¢–∏–ø —á–∞—Ç–∞: {message.chat.type}")
    if message.chat.title:
        lines.append(f"–ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞: {html.escape(message.chat.title)}")
    if message.chat.username:
        lines.append(f"–Æ–∑–µ—Ä–Ω–µ–π–º —á–∞—Ç–∞: @{html.escape(message.chat.username)}")

    # –ù–æ–≤—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏
    if message.new_chat_members:
        members = ', '.join(
            html.escape(u.first_name or '') for u in message.new_chat_members
        )
        lines.append(f"–ù–æ–≤—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏: {members}")

    # –í–∞–∂–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏
    if relevant_entities:
        lines.append("\n<b>–°—É—â–Ω–æ—Å—Ç–∏:</b>")
        lines.extend(relevant_entities)

    # –°–æ–±–∏—Ä–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–π —Ç–µ–∫—Å—Ç
    base_info = "\n".join(lines)
    if len(base_info) > 4000:
        base_info = base_info[:3990] + "\n<i>–û–±—Ä–µ–∑–∞–Ω–æ...</i>"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏–¥–µ—é (!!)
    if message.text and message.text.startswith("!!"):
        bot.send_message(message.chat.id, "<b>–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–¥–µ—é!</b>")
        idea_text = f"\n<b>–ò–î–ï–Ø:</b> {html.escape(message.text[2:].strip())}"
        bot.send_message(me, base_info + "\n\n" + idea_text)
    else:
        # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é / –≤ —á–∞—Ç
        try:
            bot.send_message(message.chat.id, "‚úÖ –ü–æ–ª—É—á–µ–Ω–æ, —Å–ø–∞—Å–∏–±–æ!")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ —á–∞—Ç: {e}")

        # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É
        bot.send_message(me, base_info)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.infinity_polling()

